///primary color
$primary-color: #F45B29;

///nav bar text colorrrr
$navBar-text-color: #5A5A5D;
$navBar-bg-color:#c3c3c3;
@import 'utilities/fonts';


$white: #fff;
$lightwhite: #fcfcfc;
$label-color:#848484;
$input-color: #878787;
$list-bg:#E9E9E9;
$fdx-invalid-color:#cf4c35;
$highlight-color: #333333;
$dialog-header-color:#4d4d4d;
$list-hover-bg: #F9F9F9;
$disabled-button-color:#c3c3c3;
$overlay-bg: rgba(0, 0, 0, 0.5);
$from-bg:rgba(242, 243, 245, 0.5);

$hand-cursor:pointer;

$list-line-height: 30px;
$list-word-break: break-all;
$list-item-padding: 0 10px;
$list-item-border:5px solid #E9E9E9;
$list-item-highlighted:5px solid $primary-color;

$default-border:1px solid #d3d3d3;
$default-focus-border:1px solid #979797;
$fdx-invalid-border:1px solid #cf4c35;

$width100:100%;
$box-shadow: 1px 0px 5px rgba(0, 0, 0, 0.25);

$box-shadow-dialog: 1px 1px 4px 1px rgba(184, 184, 184, 0.5);


/********************* Fonts ****************************************/
$fdx-font-roman: "PMNCaeciliaW01-55Roman";
$fdx-font-light:"PMNCaeciliaW01-45Light";
$fdx-font-italic: "PMNCaeciliaW01-56Italic";
$fdx-font-bold: "PMNCaeciliaW01-75Bold";
$fdx-font-heavy: "PMNCaeciliaW01-85Heavy";

$fdx-font-weight:normal;
/********************* inputText ****************************************/
$fdx-input-bg: #f7f7f7;
$fdx-input-padding: 0 5px;
$fdx-input-size:12px;

$button-font-size: 12px;


$font-size:15px;
$border-radius: 3px;


$element-height:35px;
$button-border: none;
$button-border-radius: 0;
$button-font-size: 14px;

$label-line-height:10px;


/// Rem output with px fallback.
///
/// @group Typography
/// @author Adam Laki
///
/// @param {Number} $sizeValue - Element's font size
/// @output `font-size` with fallback
///
/// @example scss - Set rem font-size to `.foo`
///   .foo {
///       @include font-size(1.2);
///   }
@mixin font-size($sizeValue: 1) {
    font-size: ($sizeValue * 16) * 1px;
    font-size: $sizeValue * 1rem;
}

/// Rem output with px fallback.
///
/// @group Typography
/// @author Adam Laki
///
/// @param {Number} $sizeValue - Element's font size
/// @output `font-size` with fallback
///
/// @example scss - Set rem font-size to `.foo`
///   .foo {
///       @include font-size(1.2);
///   }
@mixin font-size1111($sizeValue: 1) {
    font-size: ($sizeValue * 16) * 1px;
    font-size: $sizeValue * 1rem;
}

/// Helper mixin to size elements in a single line.
/// This mixin is essentially a short hand to define
/// both `width` and `height` simultaneously.
///
/// @group shorthand
/// @author Hugo Giraudel
///
/// @param {Length} $width - Element's width
/// @param {Length} $height [$width] - Element's height
/// @output `width` and `height`
///
/// @example scss - Sizing `.foo`
///   .foo {
///     @include size(100%, 3em);
///   }

@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
  }


/// Blue
$blue: #2196F3;
/// Clearfix
@mixin clearfix() {
    content: "";
    display: table;
    table-layout: fixed;
}
 
/// Articles footer section styling.
///
/// @group Styling
/// @author Adam Laki
@mixin article-footer() {
    @include clearfix();
    background: $blue;
    color: #fff;
}